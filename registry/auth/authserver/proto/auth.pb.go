// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: auth.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NPMActions int32

const (
	NPMActions_INSTALL    NPMActions = 0
	NPMActions_PUBLISH    NPMActions = 1
	NPMActions_UN_PUBLISH NPMActions = 2
)

// Enum value maps for NPMActions.
var (
	NPMActions_name = map[int32]string{
		0: "INSTALL",
		1: "PUBLISH",
		2: "UN_PUBLISH",
	}
	NPMActions_value = map[string]int32{
		"INSTALL":    0,
		"PUBLISH":    1,
		"UN_PUBLISH": 2,
	}
)

func (x NPMActions) Enum() *NPMActions {
	p := new(NPMActions)
	*p = x
	return p
}

func (x NPMActions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NPMActions) Descriptor() protoreflect.EnumDescriptor {
	return file_auth_proto_enumTypes[0].Descriptor()
}

func (NPMActions) Type() protoreflect.EnumType {
	return &file_auth_proto_enumTypes[0]
}

func (x NPMActions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NPMActions.Descriptor instead.
func (NPMActions) EnumDescriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{0}
}

type ArtAction int32

const (
	ArtAction_PULL   ArtAction = 0
	ArtAction_PUSH   ArtAction = 1
	ArtAction_DELETE ArtAction = 2
)

// Enum value maps for ArtAction.
var (
	ArtAction_name = map[int32]string{
		0: "PULL",
		1: "PUSH",
		2: "DELETE",
	}
	ArtAction_value = map[string]int32{
		"PULL":   0,
		"PUSH":   1,
		"DELETE": 2,
	}
)

func (x ArtAction) Enum() *ArtAction {
	p := new(ArtAction)
	*p = x
	return p
}

func (x ArtAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtAction) Descriptor() protoreflect.EnumDescriptor {
	return file_auth_proto_enumTypes[1].Descriptor()
}

func (ArtAction) Type() protoreflect.EnumType {
	return &file_auth_proto_enumTypes[1]
}

func (x ArtAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtAction.Descriptor instead.
func (ArtAction) EnumDescriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{1}
}

type DockerCreateJWTRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PackagePath string `protobuf:"bytes,2,opt,name=package_path,json=packagePath,proto3" json:"package_path,omitempty"`
	Actions     string `protobuf:"bytes,3,opt,name=actions,proto3" json:"actions,omitempty"`
}

func (x *DockerCreateJWTRequest) Reset() {
	*x = DockerCreateJWTRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerCreateJWTRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerCreateJWTRequest) ProtoMessage() {}

func (x *DockerCreateJWTRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerCreateJWTRequest.ProtoReflect.Descriptor instead.
func (*DockerCreateJWTRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{0}
}

func (x *DockerCreateJWTRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DockerCreateJWTRequest) GetPackagePath() string {
	if x != nil {
		return x.PackagePath
	}
	return ""
}

func (x *DockerCreateJWTRequest) GetActions() string {
	if x != nil {
		return x.Actions
	}
	return ""
}

type DockerCreateJWTResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Token   string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DockerCreateJWTResponse) Reset() {
	*x = DockerCreateJWTResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerCreateJWTResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerCreateJWTResponse) ProtoMessage() {}

func (x *DockerCreateJWTResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerCreateJWTResponse.ProtoReflect.Descriptor instead.
func (*DockerCreateJWTResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{1}
}

func (x *DockerCreateJWTResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *DockerCreateJWTResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DockerCreateJWTResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CheckAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtifactType        int32     `protobuf:"varint,1,opt,name=artifact_type,json=artifactType,proto3" json:"artifact_type,omitempty"`
	Action              ArtAction `protobuf:"varint,2,opt,name=action,proto3,enum=proto.ArtAction" json:"action,omitempty"`
	AuthorizationHeader string    `protobuf:"bytes,3,opt,name=authorization_header,json=authorizationHeader,proto3" json:"authorization_header,omitempty"`
	Host                string    `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Path                string    `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Addr                string    `protobuf:"bytes,6,opt,name=addr,proto3" json:"addr,omitempty"`
	UserAgent           string    `protobuf:"bytes,7,opt,name=userAgent,proto3" json:"userAgent,omitempty"`
	Pkg                 string    `protobuf:"bytes,8,opt,name=pkg,proto3" json:"pkg,omitempty"`
	Version             string    `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CheckAuthRequest) Reset() {
	*x = CheckAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAuthRequest) ProtoMessage() {}

func (x *CheckAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAuthRequest.ProtoReflect.Descriptor instead.
func (*CheckAuthRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2}
}

func (x *CheckAuthRequest) GetArtifactType() int32 {
	if x != nil {
		return x.ArtifactType
	}
	return 0
}

func (x *CheckAuthRequest) GetAction() ArtAction {
	if x != nil {
		return x.Action
	}
	return ArtAction_PULL
}

func (x *CheckAuthRequest) GetAuthorizationHeader() string {
	if x != nil {
		return x.AuthorizationHeader
	}
	return ""
}

func (x *CheckAuthRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *CheckAuthRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CheckAuthRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *CheckAuthRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *CheckAuthRequest) GetPkg() string {
	if x != nil {
		return x.Pkg
	}
	return ""
}

func (x *CheckAuthRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ArtAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	ResultCode int32  `protobuf:"varint,2,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
	ErrorMsg   string `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
	UserId     uint32 `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName   string `protobuf:"bytes,5,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *ArtAuthResponse) Reset() {
	*x = ArtAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtAuthResponse) ProtoMessage() {}

func (x *ArtAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtAuthResponse.ProtoReflect.Descriptor instead.
func (*ArtAuthResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{3}
}

func (x *ArtAuthResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ArtAuthResponse) GetResultCode() int32 {
	if x != nil {
		return x.ResultCode
	}
	return 0
}

func (x *ArtAuthResponse) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *ArtAuthResponse) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ArtAuthResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type CreateJWTRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtifactType  int32  `protobuf:"varint,1,opt,name=artifact_type,json=artifactType,proto3" json:"artifact_type,omitempty"`
	UserId        uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PkgPath       string `protobuf:"bytes,3,opt,name=pkg_path,json=pkgPath,proto3" json:"pkg_path,omitempty"`
	Authorization string `protobuf:"bytes,4,opt,name=authorization,proto3" json:"authorization,omitempty"`
	Host          string `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	// 有效期 单位：秒 大于 0 有效
	Expiration int64 `protobuf:"varint,6,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *CreateJWTRequest) Reset() {
	*x = CreateJWTRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJWTRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJWTRequest) ProtoMessage() {}

func (x *CreateJWTRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJWTRequest.ProtoReflect.Descriptor instead.
func (*CreateJWTRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{4}
}

func (x *CreateJWTRequest) GetArtifactType() int32 {
	if x != nil {
		return x.ArtifactType
	}
	return 0
}

func (x *CreateJWTRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateJWTRequest) GetPkgPath() string {
	if x != nil {
		return x.PkgPath
	}
	return ""
}

func (x *CreateJWTRequest) GetAuthorization() string {
	if x != nil {
		return x.Authorization
	}
	return ""
}

func (x *CreateJWTRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *CreateJWTRequest) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

type CreateJWTResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	ResultCode int32  `protobuf:"varint,2,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
	Token      string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Message    string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateJWTResponse) Reset() {
	*x = CreateJWTResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJWTResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJWTResponse) ProtoMessage() {}

func (x *CreateJWTResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJWTResponse.ProtoReflect.Descriptor instead.
func (*CreateJWTResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{5}
}

func (x *CreateJWTResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *CreateJWTResponse) GetResultCode() int32 {
	if x != nil {
		return x.ResultCode
	}
	return 0
}

func (x *CreateJWTResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreateJWTResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DockerCheckTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Repo string `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Tag  string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *DockerCheckTagRequest) Reset() {
	*x = DockerCheckTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerCheckTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerCheckTagRequest) ProtoMessage() {}

func (x *DockerCheckTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerCheckTagRequest.ProtoReflect.Descriptor instead.
func (*DockerCheckTagRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{6}
}

func (x *DockerCheckTagRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DockerCheckTagRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *DockerCheckTagRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type DockerCheckTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok       bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	ErrorMsg string `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
}

func (x *DockerCheckTagResponse) Reset() {
	*x = DockerCheckTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerCheckTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerCheckTagResponse) ProtoMessage() {}

func (x *DockerCheckTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerCheckTagResponse.ProtoReflect.Descriptor instead.
func (*DockerCheckTagResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{7}
}

func (x *DockerCheckTagResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DockerCheckTagResponse) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

type IsDockerImageForbiddenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// docker registry host
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// docker repository name. e.g., project/repo/hello-world
	Repo string `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	// docker image tag
	Tag string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *IsDockerImageForbiddenRequest) Reset() {
	*x = IsDockerImageForbiddenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsDockerImageForbiddenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsDockerImageForbiddenRequest) ProtoMessage() {}

func (x *IsDockerImageForbiddenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsDockerImageForbiddenRequest.ProtoReflect.Descriptor instead.
func (*IsDockerImageForbiddenRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{8}
}

func (x *IsDockerImageForbiddenRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *IsDockerImageForbiddenRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *IsDockerImageForbiddenRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type IsDockerImageForbiddenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 接口调用是否成功，是则返回 true，否则返回 false
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// ok 为 false 时带上的异常信息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// ok 为成功时有意义，表明当前 TAG 的 Docker 镜像是否已被禁止下载
	Forbidden bool `protobuf:"varint,3,opt,name=forbidden,proto3" json:"forbidden,omitempty"`
	// 禁止下载的备注信息
	ForbiddenNote string `protobuf:"bytes,4,opt,name=forbidden_note,json=forbiddenNote,proto3" json:"forbidden_note,omitempty"`
}

func (x *IsDockerImageForbiddenResponse) Reset() {
	*x = IsDockerImageForbiddenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsDockerImageForbiddenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsDockerImageForbiddenResponse) ProtoMessage() {}

func (x *IsDockerImageForbiddenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsDockerImageForbiddenResponse.ProtoReflect.Descriptor instead.
func (*IsDockerImageForbiddenResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{9}
}

func (x *IsDockerImageForbiddenResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *IsDockerImageForbiddenResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *IsDockerImageForbiddenResponse) GetForbidden() bool {
	if x != nil {
		return x.Forbidden
	}
	return false
}

func (x *IsDockerImageForbiddenResponse) GetForbiddenNote() string {
	if x != nil {
		return x.ForbiddenNote
	}
	return ""
}

var File_auth_proto protoreflect.FileDescriptor

var file_auth_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x16, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4a, 0x57, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x61, 0x0a, 0x17, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4a, 0x57, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9a, 0x02, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x28, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x14, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6b, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6b, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x9d, 0x01, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x57,
	0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6b, 0x67, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6b, 0x67, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7c, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x57, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x51, 0x0a, 0x15, 0x44, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x45, 0x0a, 0x16,
	0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x73, 0x67, 0x22, 0x59, 0x0a, 0x1d, 0x49, 0x73, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x87,
	0x01, 0x0a, 0x1e, 0x49, 0x73, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x62, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x2a, 0x36, 0x0a, 0x0a, 0x4e, 0x50, 0x4d, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x02,
	0x2a, 0x2b, 0x0a, 0x09, 0x41, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a,
	0x04, 0x50, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x55, 0x53, 0x48, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x32, 0x97, 0x03,
	0x0a, 0x07, 0x41, 0x72, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x52, 0x0a, 0x0f, 0x44, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x57, 0x54, 0x12, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4a, 0x57, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4a, 0x57, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a,
	0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x57, 0x54, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x57, 0x54, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4a, 0x57, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x0e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61,
	0x67, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x16, 0x49, 0x73, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x73, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x73, 0x44, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auth_proto_rawDescOnce sync.Once
	file_auth_proto_rawDescData = file_auth_proto_rawDesc
)

func file_auth_proto_rawDescGZIP() []byte {
	file_auth_proto_rawDescOnce.Do(func() {
		file_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_auth_proto_rawDescData)
	})
	return file_auth_proto_rawDescData
}

var file_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_auth_proto_goTypes = []interface{}{
	(NPMActions)(0),                        // 0: proto.NPMActions
	(ArtAction)(0),                         // 1: proto.ArtAction
	(*DockerCreateJWTRequest)(nil),         // 2: proto.DockerCreateJWTRequest
	(*DockerCreateJWTResponse)(nil),        // 3: proto.DockerCreateJWTResponse
	(*CheckAuthRequest)(nil),               // 4: proto.CheckAuthRequest
	(*ArtAuthResponse)(nil),                // 5: proto.ArtAuthResponse
	(*CreateJWTRequest)(nil),               // 6: proto.CreateJWTRequest
	(*CreateJWTResponse)(nil),              // 7: proto.CreateJWTResponse
	(*DockerCheckTagRequest)(nil),          // 8: proto.DockerCheckTagRequest
	(*DockerCheckTagResponse)(nil),         // 9: proto.DockerCheckTagResponse
	(*IsDockerImageForbiddenRequest)(nil),  // 10: proto.IsDockerImageForbiddenRequest
	(*IsDockerImageForbiddenResponse)(nil), // 11: proto.IsDockerImageForbiddenResponse
}
var file_auth_proto_depIdxs = []int32{
	1,  // 0: proto.CheckAuthRequest.action:type_name -> proto.ArtAction
	2,  // 1: proto.ArtAuth.DockerCreateJWT:input_type -> proto.DockerCreateJWTRequest
	4,  // 2: proto.ArtAuth.CheckAuth:input_type -> proto.CheckAuthRequest
	6,  // 3: proto.ArtAuth.CreateJWT:input_type -> proto.CreateJWTRequest
	8,  // 4: proto.ArtAuth.DockerCheckTag:input_type -> proto.DockerCheckTagRequest
	10, // 5: proto.ArtAuth.IsDockerImageForbidden:input_type -> proto.IsDockerImageForbiddenRequest
	3,  // 6: proto.ArtAuth.DockerCreateJWT:output_type -> proto.DockerCreateJWTResponse
	5,  // 7: proto.ArtAuth.CheckAuth:output_type -> proto.ArtAuthResponse
	7,  // 8: proto.ArtAuth.CreateJWT:output_type -> proto.CreateJWTResponse
	9,  // 9: proto.ArtAuth.DockerCheckTag:output_type -> proto.DockerCheckTagResponse
	11, // 10: proto.ArtAuth.IsDockerImageForbidden:output_type -> proto.IsDockerImageForbiddenResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_auth_proto_init() }
func file_auth_proto_init() {
	if File_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerCreateJWTRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerCreateJWTResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJWTRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJWTResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerCheckTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerCheckTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsDockerImageForbiddenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsDockerImageForbiddenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auth_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_proto_goTypes,
		DependencyIndexes: file_auth_proto_depIdxs,
		EnumInfos:         file_auth_proto_enumTypes,
		MessageInfos:      file_auth_proto_msgTypes,
	}.Build()
	File_auth_proto = out.File
	file_auth_proto_rawDesc = nil
	file_auth_proto_goTypes = nil
	file_auth_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ArtAuthClient is the client API for ArtAuth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArtAuthClient interface {
	DockerCreateJWT(ctx context.Context, in *DockerCreateJWTRequest, opts ...grpc.CallOption) (*DockerCreateJWTResponse, error)
	CheckAuth(ctx context.Context, in *CheckAuthRequest, opts ...grpc.CallOption) (*ArtAuthResponse, error)
	CreateJWT(ctx context.Context, in *CreateJWTRequest, opts ...grpc.CallOption) (*CreateJWTResponse, error)
	DockerCheckTag(ctx context.Context, in *DockerCheckTagRequest, opts ...grpc.CallOption) (*DockerCheckTagResponse, error)
	// 判断指定的 Docker 镜像版本是否已被禁止拉取
	IsDockerImageForbidden(ctx context.Context, in *IsDockerImageForbiddenRequest, opts ...grpc.CallOption) (*IsDockerImageForbiddenResponse, error)
}

type artAuthClient struct {
	cc grpc.ClientConnInterface
}

func NewArtAuthClient(cc grpc.ClientConnInterface) ArtAuthClient {
	return &artAuthClient{cc}
}

func (c *artAuthClient) DockerCreateJWT(ctx context.Context, in *DockerCreateJWTRequest, opts ...grpc.CallOption) (*DockerCreateJWTResponse, error) {
	out := new(DockerCreateJWTResponse)
	err := c.cc.Invoke(ctx, "/proto.ArtAuth/DockerCreateJWT", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artAuthClient) CheckAuth(ctx context.Context, in *CheckAuthRequest, opts ...grpc.CallOption) (*ArtAuthResponse, error) {
	out := new(ArtAuthResponse)
	err := c.cc.Invoke(ctx, "/proto.ArtAuth/CheckAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artAuthClient) CreateJWT(ctx context.Context, in *CreateJWTRequest, opts ...grpc.CallOption) (*CreateJWTResponse, error) {
	out := new(CreateJWTResponse)
	err := c.cc.Invoke(ctx, "/proto.ArtAuth/CreateJWT", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artAuthClient) DockerCheckTag(ctx context.Context, in *DockerCheckTagRequest, opts ...grpc.CallOption) (*DockerCheckTagResponse, error) {
	out := new(DockerCheckTagResponse)
	err := c.cc.Invoke(ctx, "/proto.ArtAuth/DockerCheckTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artAuthClient) IsDockerImageForbidden(ctx context.Context, in *IsDockerImageForbiddenRequest, opts ...grpc.CallOption) (*IsDockerImageForbiddenResponse, error) {
	out := new(IsDockerImageForbiddenResponse)
	err := c.cc.Invoke(ctx, "/proto.ArtAuth/IsDockerImageForbidden", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArtAuthServer is the server API for ArtAuth service.
type ArtAuthServer interface {
	DockerCreateJWT(context.Context, *DockerCreateJWTRequest) (*DockerCreateJWTResponse, error)
	CheckAuth(context.Context, *CheckAuthRequest) (*ArtAuthResponse, error)
	CreateJWT(context.Context, *CreateJWTRequest) (*CreateJWTResponse, error)
	DockerCheckTag(context.Context, *DockerCheckTagRequest) (*DockerCheckTagResponse, error)
	// 判断指定的 Docker 镜像版本是否已被禁止拉取
	IsDockerImageForbidden(context.Context, *IsDockerImageForbiddenRequest) (*IsDockerImageForbiddenResponse, error)
}

// UnimplementedArtAuthServer can be embedded to have forward compatible implementations.
type UnimplementedArtAuthServer struct {
}

func (*UnimplementedArtAuthServer) DockerCreateJWT(context.Context, *DockerCreateJWTRequest) (*DockerCreateJWTResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DockerCreateJWT not implemented")
}
func (*UnimplementedArtAuthServer) CheckAuth(context.Context, *CheckAuthRequest) (*ArtAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAuth not implemented")
}
func (*UnimplementedArtAuthServer) CreateJWT(context.Context, *CreateJWTRequest) (*CreateJWTResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJWT not implemented")
}
func (*UnimplementedArtAuthServer) DockerCheckTag(context.Context, *DockerCheckTagRequest) (*DockerCheckTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DockerCheckTag not implemented")
}
func (*UnimplementedArtAuthServer) IsDockerImageForbidden(context.Context, *IsDockerImageForbiddenRequest) (*IsDockerImageForbiddenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsDockerImageForbidden not implemented")
}

func RegisterArtAuthServer(s *grpc.Server, srv ArtAuthServer) {
	s.RegisterService(&_ArtAuth_serviceDesc, srv)
}

func _ArtAuth_DockerCreateJWT_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DockerCreateJWTRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtAuthServer).DockerCreateJWT(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ArtAuth/DockerCreateJWT",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtAuthServer).DockerCreateJWT(ctx, req.(*DockerCreateJWTRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtAuth_CheckAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtAuthServer).CheckAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ArtAuth/CheckAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtAuthServer).CheckAuth(ctx, req.(*CheckAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtAuth_CreateJWT_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJWTRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtAuthServer).CreateJWT(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ArtAuth/CreateJWT",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtAuthServer).CreateJWT(ctx, req.(*CreateJWTRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtAuth_DockerCheckTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DockerCheckTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtAuthServer).DockerCheckTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ArtAuth/DockerCheckTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtAuthServer).DockerCheckTag(ctx, req.(*DockerCheckTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtAuth_IsDockerImageForbidden_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsDockerImageForbiddenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtAuthServer).IsDockerImageForbidden(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ArtAuth/IsDockerImageForbidden",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtAuthServer).IsDockerImageForbidden(ctx, req.(*IsDockerImageForbiddenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArtAuth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ArtAuth",
	HandlerType: (*ArtAuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DockerCreateJWT",
			Handler:    _ArtAuth_DockerCreateJWT_Handler,
		},
		{
			MethodName: "CheckAuth",
			Handler:    _ArtAuth_CheckAuth_Handler,
		},
		{
			MethodName: "CreateJWT",
			Handler:    _ArtAuth_CreateJWT_Handler,
		},
		{
			MethodName: "DockerCheckTag",
			Handler:    _ArtAuth_DockerCheckTag_Handler,
		},
		{
			MethodName: "IsDockerImageForbidden",
			Handler:    _ArtAuth_IsDockerImageForbidden_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
