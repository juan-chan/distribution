// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage-path.proto

package storagepath

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DockerStoragePathRequest struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	SubPath              string   `protobuf:"bytes,2,opt,name=subPath,proto3" json:"subPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DockerStoragePathRequest) Reset()         { *m = DockerStoragePathRequest{} }
func (m *DockerStoragePathRequest) String() string { return proto.CompactTextString(m) }
func (*DockerStoragePathRequest) ProtoMessage()    {}
func (*DockerStoragePathRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_719c26fa4d37fd39, []int{0}
}

func (m *DockerStoragePathRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DockerStoragePathRequest.Unmarshal(m, b)
}
func (m *DockerStoragePathRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DockerStoragePathRequest.Marshal(b, m, deterministic)
}
func (m *DockerStoragePathRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DockerStoragePathRequest.Merge(m, src)
}
func (m *DockerStoragePathRequest) XXX_Size() int {
	return xxx_messageInfo_DockerStoragePathRequest.Size(m)
}
func (m *DockerStoragePathRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DockerStoragePathRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DockerStoragePathRequest proto.InternalMessageInfo

func (m *DockerStoragePathRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *DockerStoragePathRequest) GetSubPath() string {
	if m != nil {
		return m.SubPath
	}
	return ""
}

type DockerStoragePathReply struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DockerStoragePathReply) Reset()         { *m = DockerStoragePathReply{} }
func (m *DockerStoragePathReply) String() string { return proto.CompactTextString(m) }
func (*DockerStoragePathReply) ProtoMessage()    {}
func (*DockerStoragePathReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_719c26fa4d37fd39, []int{1}
}

func (m *DockerStoragePathReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DockerStoragePathReply.Unmarshal(m, b)
}
func (m *DockerStoragePathReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DockerStoragePathReply.Marshal(b, m, deterministic)
}
func (m *DockerStoragePathReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DockerStoragePathReply.Merge(m, src)
}
func (m *DockerStoragePathReply) XXX_Size() int {
	return xxx_messageInfo_DockerStoragePathReply.Size(m)
}
func (m *DockerStoragePathReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DockerStoragePathReply.DiscardUnknown(m)
}

var xxx_messageInfo_DockerStoragePathReply proto.InternalMessageInfo

func (m *DockerStoragePathReply) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*DockerStoragePathRequest)(nil), "storagepath.DockerStoragePathRequest")
	proto.RegisterType((*DockerStoragePathReply)(nil), "storagepath.DockerStoragePathReply")
}

func init() { proto.RegisterFile("storage-path.proto", fileDescriptor_719c26fa4d37fd39) }

var fileDescriptor_719c26fa4d37fd39 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x2e, 0xc9, 0x2f,
	0x4a, 0x4c, 0x4f, 0xd5, 0x2d, 0x48, 0x2c, 0xc9, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x86, 0x8a, 0x81, 0x84, 0x94, 0x3c, 0xb8, 0x24, 0x5c, 0xf2, 0x93, 0xb3, 0x53, 0x8b, 0x82, 0x21,
	0x82, 0x01, 0x89, 0x25, 0x19, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c,
	0x19, 0xf9, 0xc5, 0x25, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x90, 0x04, 0x17,
	0x7b, 0x71, 0x69, 0x12, 0x48, 0x95, 0x04, 0x13, 0x58, 0x18, 0xc6, 0x55, 0xd2, 0xe1, 0x12, 0xc3,
	0x62, 0x52, 0x41, 0x4e, 0x25, 0xc8, 0x1c, 0x90, 0x5d, 0x30, 0x73, 0x40, 0x6c, 0xa3, 0x62, 0x2e,
	0x6e, 0x24, 0x75, 0x42, 0x29, 0x5c, 0x22, 0xee, 0xa9, 0x25, 0x18, 0xfa, 0x85, 0x54, 0xf5, 0x90,
	0x1c, 0xab, 0x87, 0xcb, 0xa5, 0x52, 0xca, 0x84, 0x94, 0x15, 0xe4, 0x54, 0x2a, 0x31, 0x24, 0xb1,
	0x81, 0x03, 0xc0, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x66, 0x87, 0x19, 0x16, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StoragePathClient is the client API for StoragePath service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StoragePathClient interface {
	GetDockerStoragePath(ctx context.Context, in *DockerStoragePathRequest, opts ...grpc.CallOption) (*DockerStoragePathReply, error)
}

type storagePathClient struct {
	cc *grpc.ClientConn
}

func NewStoragePathClient(cc *grpc.ClientConn) StoragePathClient {
	return &storagePathClient{cc}
}

func (c *storagePathClient) GetDockerStoragePath(ctx context.Context, in *DockerStoragePathRequest, opts ...grpc.CallOption) (*DockerStoragePathReply, error) {
	out := new(DockerStoragePathReply)
	err := c.cc.Invoke(ctx, "/storagepath.StoragePath/GetDockerStoragePath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StoragePathServer is the server API for StoragePath service.
type StoragePathServer interface {
	GetDockerStoragePath(context.Context, *DockerStoragePathRequest) (*DockerStoragePathReply, error)
}

func RegisterStoragePathServer(s *grpc.Server, srv StoragePathServer) {
	s.RegisterService(&_StoragePath_serviceDesc, srv)
}

func _StoragePath_GetDockerStoragePath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DockerStoragePathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoragePathServer).GetDockerStoragePath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storagepath.StoragePath/GetDockerStoragePath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoragePathServer).GetDockerStoragePath(ctx, req.(*DockerStoragePathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StoragePath_serviceDesc = grpc.ServiceDesc{
	ServiceName: "storagepath.StoragePath",
	HandlerType: (*StoragePathServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDockerStoragePath",
			Handler:    _StoragePath_GetDockerStoragePath_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "storage-path.proto",
}
